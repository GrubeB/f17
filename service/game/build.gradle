plugins {
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'pl.app.game'
version = '0.0.1'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2023.0.3")
}
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}


dependencies {
    // SUBPROJECTS
    implementation project(':common:shared')
    implementation project(':common:mapper')

    // WEB
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // DATABASE
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'

    // KAFKA
    implementation 'org.apache.kafka:kafka-streams'
    implementation 'org.springframework.cloud:spring-cloud-stream'
    implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka'
    implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka-streams'
    implementation 'org.springframework.kafka:spring-kafka'
    testImplementation 'org.springframework.cloud:spring-cloud-stream-test-binder'
    testImplementation 'org.springframework.kafka:spring-kafka-test'

    // FAKER
    implementation('com.github.javafaker:javafaker:1.0.2') { exclude module: 'org.yaml' }
    implementation 'org.yaml:snakeyaml:1.26'

    // MAPPER
    implementation 'org.modelmapper:modelmapper:3.1.1'
    implementation 'org.modelmapper.extensions:modelmapper-spring:3.1.1'

    // LOMBOK
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // TESTS
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: "com.vaadin.external.google", module: "android-json"
    }
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // REACTOR
    implementation platform('io.projectreactor:reactor-bom:2023.0.8')
    testImplementation 'io.projectreactor:reactor-test'

    // MOCKITO
    testImplementation 'org.mockito:mockito-core:5.12.0'

    // LOGGING
    implementation 'org.fusesource.jansi:jansi:1.17.1'

    // TEST CONTAINER
    testImplementation "org.junit.jupiter:junit-jupiter:5.8.1"
    testImplementation "org.testcontainers:testcontainers:1.20.1"
    testImplementation "org.testcontainers:junit-jupiter:1.20.1"
    testImplementation "org.testcontainers:mongodb:1.20.1"
}

tasks.named('test') {
    useJUnitPlatform()
}
tasks.jar {
    manifest {
        archiveFileName.set("comment-service.jar")
    }
}